{"version":3,"file":"workbox-3bd073ed.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/setCacheNameDetails.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/getCacheKeyForURL.js","node_modules/workbox-precaching/utils/addFetchListener.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/precachePlugins.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-in-sw': ({ moduleName }) => {\n        if (!moduleName) {\n            throw new Error(`Unexpected input to 'not-in-sw' error.`);\n        }\n        return `The '${moduleName}' must be used in a service worker.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `is unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method returns true if the current context is a service worker.\n */\nconst isSWEnv = (moduleName) => {\n    if (!('ServiceWorkerGlobalScope' in self)) {\n        throw new WorkboxError('not-in-sw', { moduleName });\n    }\n};\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isSWEnv,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof module:workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details && details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Force a service worker to activate immediately, instead of\n * [waiting](https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#waiting)\n * for existing clients to close.\n *\n * @memberof module:workbox-core\n */\nfunction skipWaiting() {\n    // We need to explicitly call `self.skipWaiting()` here because we're\n    // shadowing `skipWaiting` with this local function.\n    self.addEventListener('install', () => self.skipWaiting());\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await self.caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await self.caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a `CacheableResponsePlugin` instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a\n     * {@link module:workbox-routing.Route} that will find a response for the\n     * incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request instanceof Request ? request.url : request,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('install', installListener);\n        self.addEventListener('activate', activateListener);\n    }\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n"],"names":["self","_","e","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","method","methodName","normalizedRangeHeader","size","start","end","url","error","status","cacheName","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isSWEnv","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","length","join","eachCacheNameDetail","fn","key","Object","keys","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","setCacheNameDetails","forEach","assert","skipWaiting","addEventListener","clientsClaim","clients","claim","getFriendlyURL","urlObj","URL","String","location","href","replace","RegExp","origin","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","groupCollapsed","groupEnd","print","args","test","navigator","userAgent","console","styles","logPrefix","api","loggerMethods","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","request","mode","cacheKeyWillBeUsedPlugins","effectiveRequest","call","Request","_isResponseSafeToCache","response","event","responseToCache","pluginsUsed","pluginMethod","Response","undefined","matchWrapper","matchOptions","cache","caches","open","cachedResponse","match","putWrapper","updatePlugins","oldResponse","put","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","err","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","clonedResponse","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","set","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_cacheName","_urlsToCacheKeys","Map","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","entries","urlsToWarnAbout","push","cacheMode","has","get","integrity","warningMessage","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","map","precacheRequests","_addURLToCache","Promise","all","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","delete","credentials","cacheWillUpdatePlugin","isValidResponse","cacheWillUpdate","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","handler","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","some","regExp","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","options","urlsToCacheKeys","possibleURL","possibleCacheKey","addFetchListener","precachedURL","responsePromise","then","respondWith","listenerAdded","addRoute","precachePlugins","add","newPlugins","installListener","waitUntil","catch","activateListener","precacheAndRoute"],"mappings":"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"}