{"version":3,"file":"workbox-20b6947b.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/setCacheNameDetails.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/waitUntil.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-precaching/PrecacheStrategy.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/PrecacheRoute.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`);\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return `workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof module:workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details && details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {module:workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise && (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        err = catchErr;\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do. \n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                // TODO: `state` should never be undefined...\n                const url = state.originalRequest.url;\n                if (cachedResponse) {\n                    this.notUpdatedURLs.push(url);\n                }\n                else {\n                    this.updatedURLs.push(url);\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            const cacheKey = params && params.cacheKey ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            return cacheKey ? new Request(cacheKey) : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = { ...matchOptions, ignoreSearch: true };\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.1.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return (typeof input === 'string') ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = await event.preloadResponse;\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail') ?\n            request.clone() : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            throw new WorkboxError('plugin-error-request-will-fetch', {\n                thrownError: err,\n            });\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ?\n                undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = { ...matchOptions, ...{ cacheName } };\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse = (await callback({\n                cacheName,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n                event: this.event,\n            })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback ? await cacheMatchIgnoreParams(\n        // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n        // feature. Consider into ways to only add this behavior if using\n        // precaching.\n        cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions) :\n            null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ?\n                responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n            if (error.name === 'QuotaExceededError') {\n                await executeQuotaErrorCallbacks();\n            }\n            throw error;\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        if (!this._cacheKeys[mode]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    params: this.params,\n                }));\n            }\n            this._cacheKeys[mode] = effectiveRequest;\n        }\n        return this._cacheKeys[mode];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = { ...param, state };\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while (promise = this._extendLifetimePromises.shift()) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve();\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache = (await callback({\n                request: this.request,\n                response: responseToCache,\n                event: this.event,\n            })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string' ?\n            new Request(options.request) :\n            options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                response = await callback({ error, event, request });\n                if (response) {\n                    break;\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            error = waitUntilError;\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A [Strategy]{@link module:workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork = options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (!response) {\n            // If this is an `install` event then populate the cache. If this is a\n            // `fetch` event (or any other event) then respond with the cached\n            // response.\n            if (handler.event && handler.event.type === 'install') {\n                return await this._handleInstall(request, handler);\n            }\n            return await this._handleFetch(request, handler);\n        }\n        return response;\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        // Fall back to the network if we don't have a cached response\n        // (perhaps due to manual cache cleanup).\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network instead.`);\n            }\n            response = await handler.fetch(request);\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = handler.params && handler.params.cacheKey ||\n                await handler.getCacheKey(request, 'read');\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` +\n                getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey.url)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    }\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    }\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {module:workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = { cacheKey, ...options.params };\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of [Route]{@link module:workbox-routing.Route} that takes a\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof module:workbox-precaching\n * @extends module:workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    return { cacheKey };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [PrecacheRoute options]{@link module:workbox-precaching.PrecacheRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n"],"names":["self","_","e","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","method","methodName","normalizedRangeHeader","size","start","end","url","error","status","cacheName","origin","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","length","join","eachCacheNameDetail","fn","key","Object","keys","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","setCacheNameDetails","forEach","assert","clientsClaim","addEventListener","clients","claim","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","groupCollapsed","groupEnd","print","args","test","navigator","userAgent","console","styles","logPrefix","api","loggerMethods","defaultMethod","validMethods","normalizeHandler","handler","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","msg","err","reject","_catchHandler","catch","catchErr","matchResult","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","asyncFn","returnPromise","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","state","originalRequest","cachedResponseWillBeUsed","cachedResponse","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","supportStatus","canConstructResponseFromBodyStream","testResponse","Response","body","copyResponse","response","modifier","responseURL","clonedResponse","clone","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","stripParams","fullURL","ignoreParams","strippedURL","param","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","keysOptions","ignoreSearch","cacheKeys","strippedCacheKeyURL","Deferred","promise","resolve","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","hasCallback","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","effectiveRequest","getCacheKey","multiMatchOptions","caches","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handleInstall","_handleFetch","_useDefaultCacheabilityPluginIfNeeded","wasCached","defaultPluginIndex","cacheWillUpdatePluginCount","entries","defaultPrecacheCacheabilityPlugin","cacheWillUpdate","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","bind","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","integrity","warningMessage","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","getURLsToCacheKeys","getCachedURLs","matchPrecache","createHandlerBoundToURL","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","some","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","possibleURL","addRoute","precacheRoute","precacheAndRoute"],"mappings":"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"}