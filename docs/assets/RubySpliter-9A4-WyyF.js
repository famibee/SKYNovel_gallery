class i{static#e="ヽ";static setting(t){t.sesame&&(i.#e=t.sesame)}static getSesame(){return i.#e}static destroy(){i.#e="ヽ"}#t=()=>{};init(t){this.#t=t}static#n;static setEscape(t){i.#n=new RegExp(`${t?`(?<ce>\\${t}\\S)|`:""}｜(?<str>[^《\\n]+)《(?<ruby>[^》\\n]+)》|(?:(?<kan>[⺀-⿟々〇〻㐀-鿿豈-﫿]+[ぁ-ヿ]*|[^　｜《》\\n])《(?<kan_ruby>[^》\\n]+)》)|(?<txt>[\uD800-\uDBFF][\uDC00-\uDFFF]|[^｜《》]+?|.)`,"gs")}putTxt(t){for(const{groups:e}of t.matchAll(i.#n)){const{ruby:r,kan_ruby:s,kan:a="",ce:c,txt:u="",str:n=""}=e;if(r){this.putTxtRb(decodeURIComponent(n),r);continue}if(s){this.putTxtRb(a,s);continue}if(c){this.#t(c.slice(1),"");continue}for(const o of Array.from(u))this.#t(o,"")}}putTxtRb(t,e){if(/^\w+｜{"/.test(e)){this.#t(t,e);return}const r=Array.from(t),s=r.length;if(/^\*.?$/.test(e)){const n="center｜"+(e==="*"?i.#e:e.charAt(1));for(let o=0;o<s;++o)this.#t(r[o],n);return}if(s===1||!e.includes(" ")){this.#t(t,decodeURIComponent(e));return}const a=e.split(" "),c=a.length,u=c>s?c:s;for(let n=0;n<u;++n)this.#t(n<s?r[n]:"",n<c?decodeURIComponent(a[n]):"")}}export{i as o};
