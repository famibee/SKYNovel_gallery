import{b,a as c}from"./web.js";import{B as v,y as r,n as h,R as n,z as a}from"./SndBuf.js";import"../web.js";import"./Reading.js";class y{constructor(s,t,o,i,l){this.val=o,t.volume=e=>this.#f(e),t.fadebgm=e=>this.#n(e),t.fadeoutbgm=e=>this.#c(e),t.fadeoutse=e=>this.#b(e),t.fadese=e=>this.#t(e),t.playbgm=e=>this.#a(e),t.playse=e=>this.#i(e),t.stop_allse=()=>this.#e(),t.stopbgm=e=>this.#v(e),t.stopse=e=>this.#o(e),t.wb=e=>this.#g(e),t.wf=e=>this.#u(e),t.stopfadese=e=>this.#r(e),t.wl=e=>this.#p(e),t.ws=e=>this.#h(e),t.xchgbuf=e=>this.#d(e),o.setVal_Nochk("save","const.sn.loopPlaying","{}"),o.setVal_Nochk("tmp","const.sn.sound.codecs",JSON.stringify(v.supported)),r.init(s,o,i,l,this.#s),h.disableAutoPause=!0}#s={};#l;setEvtMng(s){this.#l=s,r.setEvtMng(s)}setNoticeChgVolume(s,t){this.val.defValTrg("sys:sn.sound.global_volume",(o,i)=>s(h.volumeAll=Number(i))),this.val.defValTrg("sys:sn.sound.movie_volume",(o,i)=>t(Number(i))),this.val.setVal_Nochk("sys","sn.sound.global_volume",this.val.getVal("sys:sn.sound.global_volume",1)),this.val.setVal_Nochk("sys","sn.sound.movie_volume",this.val.getVal("sys:sn.sound.movie_volume",1))}#f(s){const{buf:t=n}=s,o="const.sn.sound."+t+".volume",i=this.#m(s,1);return Number(this.val.getVal("sys:"+o))===i?!1:(this.val.setVal_Nochk("sys",o,i),this.val.flush(),s.time=0,s.volume=Number(this.val.getVal("save:"+o)),this.#t(s))}#m(s,t){const o=b(s,"volume",t);return o<0?0:o>1?1:o}#c(s){return s.volume=0,this.#n(s)}#b(s){return s.volume=0,this.#t(s)}#n(s){return s.buf=a,this.#t(s)}#t(s){const{buf:t=n}=s;return this.#r(s),this.#s[t]?.fade(s),!1}#a(s){return s.buf=a,s.canskip=!1,c(s,"loop",!0),this.#i(s)}#i(s){const{buf:t=n,fn:o}=s;if(this.#o({buf:t}),!o)throw`fnは必須です buf:${t}`;return c(s,"canskip",!0)&&this.#l.isSkipping?!1:(this.#s[t]=new r(s,t,o)).needLoad}clearCache(){h.removeAll()}#e(){for(const s of Object.keys(this.#s))this.#o({buf:s});return this.#s={},h.stopAll(),!1}#v(s){return s.buf=a,this.#o(s)}#o(s){const{buf:t=n}=s;return this.#s[t]?.stopse(s),!1}#g(s){return s.buf=a,this.#u(s)}#u(s){const{buf:t=n}=s;return this.#s[t]?.wf(s)}#r(s){const{buf:t=n}=s;return this.#s[t]?.stopfadese(s),!1}#p(s){return s.buf=a,this.#h(s)}#h(s){const{buf:t=n}=s;return this.#s[t]?.ws(s)}#d(s){const{buf:t=n,buf2:o=n}=s;if(t===o)return!1;const i=this.#s[t],l=this.#s[o];return i?this.#s[o]=i:delete this.#s[o],l?this.#s[t]=l:delete this.#s[t],r.xchgbuf(s),!1}playLoopFromSaveObj(s){const t=String(this.val.getVal("save:const.sn.loopPlaying","{}"));if(t==="{}")return this.#e(),this.clearCache(),[];const o=JSON.parse(t);if(s)this.#e(),this.clearCache();else for(const[i,l]of Object.entries(this.#s))i in o||l?.stopse({buf:i});return Object.entries(o).map(([i,l])=>new Promise(e=>{const m=this.#s[i];if(!s&&m&&m.fn===l){e();return}const u="save:const.sn.sound."+i+".",f={fn:l,buf:i,join:!1,loop:!0,volume:Number(this.val.getVal(u+"volume")),start_ms:Number(this.val.getVal(u+"start_ms")),end_ms:Number(this.val.getVal(u+"end_ms")),ret_ms:Number(this.val.getVal(u+"ret_ms")),fnc:e};f.buf===a?this.#a(f):this.#i(f)}))}destroy(){this.#e(),this.clearCache()}}export{y as SoundMng};
