!function(e){function n(n){for(var t,a,o=n[0],l=n[1],c=n[2],p=0,m=[];p<o.length;p++)a=o[p],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&m.push(i[a][0]),i[a]=0;for(t in l)Object.prototype.hasOwnProperty.call(l,t)&&(e[t]=l[t]);for(h&&h(n);m.length;)m.shift()();return s.push.apply(s,c||[]),r()}function r(){for(var e,n=0;n<s.length;n++){for(var r=s[n],t=!0,o=1;o<r.length;o++){var l=r[o];0!==i[l]&&(t=!1)}t&&(s.splice(n--,1),e=a(a.s=r[0]))}return e}var t={},i={main:0},s=[];function a(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.m=e,a.c=t,a.d=function(e,n,r){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)a.d(r,t,function(n){return e[n]}.bind(null,t));return r},a.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="";var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=n,o=o.slice();for(var c=0;c<o.length;c++)n(o[c]);var h=l;s.push(["./core/web4webpack.js","vendor","three"]),r()}({"./core/plugin sync recursive ^\\.\\/.*\\/index\\.js$":
/*!**********************************************!*\
  !*** ./core/plugin sync ^\.\/.*\/index\.js$ ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('var map = {\n\t"./3d_layer/index.js": "./core/plugin/3d_layer/index.js",\n\t"./cubism3_layer/index.js": "./core/plugin/cubism3_layer/index.js",\n\t"./emote_layer/index.js": "./core/plugin/emote_layer/index.js"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error("Cannot find module \'" + req + "\'");\n\t\te.code = \'MODULE_NOT_FOUND\';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = "./core/plugin sync recursive ^\\\\.\\\\/.*\\\\/index\\\\.js$";\n\n//# sourceURL=webpack:///./core/plugin_sync_^\\.\\/.*\\/index\\.js$?')},"./core/plugin.js":
/*!************************!*\
  !*** ./core/plugin.js ***!
  \************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__["default"] = ({"3d_layer":0,"cubism3_layer":0,"emote_layer":0});\n\n//# sourceURL=webpack:///./core/plugin.js?')},"./core/plugin/3d_layer/ThreeDLayer.js":
/*!*********************************************!*\
  !*** ./core/plugin/3d_layer/ThreeDLayer.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Layer_1 = __webpack_require__(/*! skynovel/core/lib/sn/Layer */ \"./node_modules/skynovel/core/lib/sn/Layer.js\");\nconst Layer = Layer_1.Layer;\nconst CmnLib_1 = __webpack_require__(/*! skynovel/core/lib/sn/CmnLib */ \"./node_modules/skynovel/core/lib/sn/CmnLib.js\");\nconst CmnLib = CmnLib_1.CmnLib;\nconst three_1 = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ \"./node_modules/pixi.js/lib/pixi.es.js\");\nconst EXT_STILL_IMG = 'png_|jpg_|jpeg_|svg_|png|jpg|jpeg|svg';\nclass ThreeDLayer extends Layer {\n    constructor() {\n        super();\n        this.tick = () => {\n            if (!this.running)\n                return;\n            this.canvas_3D.render(this.scene_3D, this.camera);\n            this.sprite_3D.texture.update();\n            this.fncCtrl();\n            this.fncMixerUpd();\n            requestAnimationFrame(this.tick);\n        };\n        this.running = false;\n        this.fncCtrl = () => { };\n        this.fncMixerUpd = () => { };\n        this.clock = new three_1.Clock();\n        this.hInf = {};\n        this.record = () => Object.assign(super.record(), {\n            type: this.type,\n        });\n        if (ThreeDLayer.uniq_num++ % 2 == 1)\n            return;\n        this.scene_3D = new three_1.Scene();\n        const log = console.log;\n        console.log = () => { };\n        this.canvas_3D = new three_1.WebGLRenderer({ antialias: true, alpha: true });\n        console.log = log;\n        this.canvas_3D.setSize(CmnLib.stageW, CmnLib.stageH);\n        this.canvas_3D.setPixelRatio(window.devicePixelRatio);\n        const texture_3D = pixi_js_1.Texture.from(this.canvas_3D.domElement);\n        this.sprite_3D = new pixi_js_1.Sprite(texture_3D);\n        this.cnt.addChild(this.sprite_3D);\n        this.sprite_3D.x = (CmnLib.stageW - this.sprite_3D.width) / 2;\n        this.sprite_3D.y = (CmnLib.stageH - this.sprite_3D.height) / 2;\n    }\n    lay(hArg) {\n        if (!this.scene_3D)\n            return false;\n        if ('grid' in hArg) {\n            const grid = new three_1.GridHelper(CmnLib.argChk_Num(hArg, 'grid_size', 10), CmnLib.argChk_Num(hArg, 'grid_step', 5));\n            this.csv2pos(hArg, 'grid', grid);\n            grid.name = '_grid';\n            this.scene_3D.add(grid);\n        }\n        if ('camera' in hArg) {\n            if (!this.camera) {\n                this.camera = new three_1.PerspectiveCamera(CmnLib.argChk_Num(hArg, 'camera_fov', 50), CmnLib.stageW / CmnLib.stageH, CmnLib.argChk_Num(hArg, 'camera_near', 0.1), CmnLib.argChk_Num(hArg, 'camera_far', 2000));\n            }\n            this.csv2pos(hArg, 'camera', this.camera);\n        }\n        if ('directional_light' in hArg) {\n            const light = new three_1.DirectionalLight(0xFFFFFF);\n            light.intensity = CmnLib.argChk_Num(hArg, 'intensity', 1);\n            this.csv2pos(hArg, 'directional_light', light);\n            light.name = '_light';\n            this.scene_3D.add(light);\n        }\n        if ('controls' in hArg) {\n            const elm = document.getElementById('skynovel');\n            __webpack_require__(/*! three/examples/js/controls/OrbitControls */ \"./node_modules/three/examples/js/controls/OrbitControls.js\");\n            const controls = new ThreeDLayer.THREE.OrbitControls(this.camera, elm);\n            controls.target.set(this.camera.position.x + 0.15, this.camera.position.y, this.camera.position.z);\n            controls.enableDamping = true;\n            controls.dampingFactor = 0.2;\n            controls.rotateSpeed = 0.1;\n            controls.zoomSpeed = 2;\n            this.fncCtrl = () => controls.update();\n        }\n        const type = hArg.type;\n        const name = hArg.name || '';\n        let mdl = new three_1.Mesh();\n        if (type) {\n            if (name in this.hInf)\n                throw `name（=${name}）が重複しています`;\n            if (!this.running) {\n                this.running = true;\n                this.tick();\n            }\n            if (type == 'box') {\n                const size = CmnLib.argChk_Num(hArg, 'size', 100);\n                const geometry = new three_1.BoxGeometry(size, size, size);\n                const material = new three_1.MeshNormalMaterial();\n                mdl = new three_1.Mesh(geometry, material);\n                mdl.rotation.z = -45;\n                this.fncCtrl = () => {\n                    this.scene_3D.children.map(o => {\n                        const m = o;\n                        if (!m)\n                            return;\n                        m.rotation.x += 0.01;\n                        m.rotation.y += 0.01;\n                        m.rotation.z += 0.01;\n                    });\n                };\n                this.hInf[name] = { type: type, fn: '' };\n                mdl.name = name;\n                this.scene_3D.add(mdl);\n                return false;\n            }\n            const fn = hArg.fn;\n            if (!fn)\n                throw 'fnは必須です';\n            switch (type) {\n                case 'celestial_sphere':\n                    {\n                        const geometry = new three_1.SphereGeometry(5, 60, 40);\n                        geometry.scale(-1, 1, 1);\n                        const ldr = new three_1.TextureLoader();\n                        if (!fn)\n                            throw 'fnがありません';\n                        const tx = ldr.load(ThreeDLayer.plgArg.searchPath(fn, EXT_STILL_IMG));\n                        tx.minFilter = three_1.LinearFilter;\n                        const material = new three_1.MeshBasicMaterial({ map: tx });\n                        mdl = new three_1.Mesh(geometry, material);\n                        this.camera.lookAt(mdl.position);\n                        this.fncCtrl = () => { mdl.rotation.y += 0.001; };\n                    }\n                    break;\n                case 'gltf':\n                    {\n                        if (!fn)\n                            throw 'fnがありません';\n                        const onProgress = ('debug' in hArg)\n                            ? (xhr) => console.log(`${(xhr.loaded / xhr.total * 100)}% loaded`)\n                            : () => { };\n                        __webpack_require__(/*! three/examples/js/loaders/GLTFLoader */ \"./node_modules/three/examples/js/loaders/GLTFLoader.js\");\n                        (new ThreeDLayer.THREE.GLTFLoader()).load(ThreeDLayer.plgArg.searchPath(fn, 'gltf|glb'), (gltf) => {\n                            const mdl = gltf.scene;\n                            mdl.name = name;\n                            this.scene_3D.add(mdl);\n                            this.hInf[name] = { type: type, fn: fn, gltf: gltf };\n                            this.arg2mdl(hArg, mdl);\n                        }, onProgress, (err) => console.error('An error happened', err));\n                    }\n                    return false;\n                case 'fbx':\n                    {\n                    }\n                    break;\n                case 'dae':\n                    {\n                    }\n                    break;\n                default:\n                    throw `サポートしない type=${type} です`;\n            }\n            this.hInf[name] = { type: type, fn: fn };\n            mdl.name = name;\n            this.scene_3D.add(mdl);\n        }\n        else if ('del' in hArg) {\n            const del = hArg['del'];\n            const mdl2 = this.scene_3D.children.find(e => e.name === del);\n            if (!mdl2)\n                throw `３Ｄレイヤに存在しないモデル name=${del} です`;\n            this.clearObject3D(mdl2);\n            delete this.hInf[del];\n            return false;\n        }\n        else if ('name' in hArg) {\n            const mdl2 = this.scene_3D.children.find(e => e.name === name);\n            if (!mdl2)\n                throw `３Ｄレイヤに存在しないモデル name=${name} です`;\n            mdl = mdl2;\n        }\n        else\n            return false;\n        this.arg2mdl(hArg, mdl);\n        return false;\n    }\n    arg2mdl(hArg, o) {\n        var _a;\n        this.csv2pos(hArg, 'pos', o);\n        this.csv2scale(hArg, 'scale', o);\n        const inf = this.hInf[o.name];\n        if (!inf)\n            return;\n        if ('label' in hArg) {\n            inf.label = hArg['label'];\n            if (inf.gltf) {\n                const ac = three_1.AnimationClip.findByName(inf.gltf.animations, (_a = inf.label) !== null && _a !== void 0 ? _a : '');\n                if (!ac) {\n                    console.info(`エラーが発生しました。参考までに ${inf.fn}(glTF)内に存在するアニメ名を列挙します`);\n                    const a = inf.gltf.animations;\n                    a.map(v => console.info(`  label=${v.name}`));\n                    throw `${inf.fn}(glTF)内に存在しないアニメ（label=${inf.label}）です`;\n                }\n                if (inf.mixer) {\n                    const t = CmnLib.argChk_Num(hArg, 'time', 1000) / 1000;\n                    const aa = inf.mixer.clipAction(ac);\n                    aa.crossFadeFrom(inf.aa, t, true);\n                    inf.aa = aa;\n                }\n                else {\n                    inf.mixer = new three_1.AnimationMixer(o);\n                    inf.aa = inf.mixer.clipAction(ac);\n                    this.fncMixerUpd = () => {\n                        this.scene_3D.children.map(v => {\n                            const inf2 = this.hInf[v.name];\n                            if (inf2)\n                                inf2.mixer.update(this.clock.getDelta());\n                        });\n                    };\n                }\n                inf.aa.enabled = true;\n                inf.aa.clampWhenFinished = true;\n                inf.aa.loop = CmnLib.argChk_Boolean(hArg, 'loop', true)\n                    ? three_1.LoopRepeat\n                    : three_1.LoopOnce;\n                inf.aa.play();\n            }\n        }\n    }\n    csv2pos(hArg, name, o) {\n        if (!(name in hArg))\n            return;\n        const p = String(hArg[name]).split(',').map(v => Number(v));\n        o.position.set(p[0], p[1], p[2]);\n    }\n    csv2scale(hArg, name, o) {\n        if (!(name in hArg))\n            return;\n        const p = String(hArg[name]).split(',').map(v => Number(v));\n        o.scale.set(p[0], p[1], p[2]);\n    }\n    clearLay(hArg) {\n        super.clearLay(hArg);\n        if (!this.scene_3D)\n            return;\n        if (!this.running)\n            return;\n        this.running = false;\n        this.fncCtrl = () => { };\n        this.fncMixerUpd = () => { };\n        this.hInf = {};\n        this.clearScene(this.scene_3D);\n        this.canvas_3D.clear();\n        this.sprite_3D.texture.update();\n        delete this.camera;\n    }\n    clearScene(sc) {\n        sc.children.slice().map(o => this.clearObject3D(o));\n    }\n    clearObject3D(o) {\n        o.parent.remove(o);\n        const s = o;\n        if (s) {\n            const inf = this.hInf[s.name];\n            if (inf && inf.mixer)\n                inf.mixer.stopAllAction();\n            this.clearScene(s);\n            return;\n        }\n        const m = o;\n        if (!m)\n            return;\n        m.geometry.dispose();\n        if (m.material instanceof three_1.Material) {\n            m.material.dispose();\n            if (m.material)\n                delete m.material;\n        }\n        else {\n            m.material.map(v => v.dispose());\n        }\n    }\n    playback(hLay, fncComp = undefined) {\n        super.playback(hLay);\n        if (fncComp != undefined)\n            fncComp();\n        if (!this.scene_3D)\n            return false;\n        return false;\n    }\n    dump() {\n        if (!this.scene_3D)\n            return `\"is\":\"nothing\"`;\n        const aChi = [];\n        this.scene_3D.children.map(o => {\n            let s = `\"${o.name}\": {\"type\":\"${o.type}\"`;\n            const inf = this.hInf[o.name];\n            if (inf && inf.mixer)\n                s += `, \"label\":\"${inf.label}\"`;\n            aChi.push(s + `}`);\n        });\n        return super.dump() + `, \"mdl\":{${aChi.join(',')}}`;\n    }\n    ;\n}\nexports.ThreeDLayer = ThreeDLayer;\nThreeDLayer.uniq_num = 0;\n//# sourceMappingURL=ThreeDLayer.js.map\n\n//# sourceURL=webpack:///./core/plugin/3d_layer/ThreeDLayer.js?")},"./core/plugin/3d_layer/index.js":
/*!***************************************!*\
  !*** ./core/plugin/3d_layer/index.js ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst ThreeDLayer_1 = __webpack_require__(/*! ./ThreeDLayer */ "./core/plugin/3d_layer/ThreeDLayer.js");\nexports.init = (plgArg) => {\n    ThreeDLayer_1.ThreeDLayer.plgArg = plgArg;\n    (async () => {\n        ThreeDLayer_1.ThreeDLayer.THREE = await Promise.resolve().then(() => __webpack_require__(/*! three */ "./node_modules/three/build/three.module.js"));\n        window.THREE = ThreeDLayer_1.ThreeDLayer.THREE;\n        plgArg.addLayCls(\'3d\', () => { const l = new ThreeDLayer_1.ThreeDLayer; return l; });\n    })();\n};\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./core/plugin/3d_layer/index.js?')},"./core/plugin/cubism3_layer/Cubism3Layer.js":
/*!***************************************************!*\
  !*** ./core/plugin/cubism3_layer/Cubism3Layer.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Layer_1 = __webpack_require__(/*! skynovel/core/lib/sn/Layer */ \"./node_modules/skynovel/core/lib/sn/Layer.js\");\nconst Layer = Layer_1.Layer;\nconst CmnLib_1 = __webpack_require__(/*! skynovel/core/lib/sn/CmnLib */ \"./node_modules/skynovel/core/lib/sn/CmnLib.js\");\nconst CmnLib = CmnLib_1.CmnLib;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ \"./node_modules/pixi.js/lib/pixi.es.js\");\nclass Cubism3Layer extends Layer {\n    constructor() {\n        super(...arguments);\n        this.ldr = new pixi_js_1.Loader;\n        this.state = {\n            fn: '',\n            label: '',\n            scale: 1,\n        };\n        this.hdl_tick = 0;\n        this.record = () => Object.assign(super.record(), this.state);\n    }\n    lay(hArg, fncComp) {\n        super.lay(hArg);\n        const id = hArg.id || '0';\n        const fn = hArg.fn;\n        if (fn) {\n            const label = hArg.label;\n            if (!label)\n                throw `label属性でモーションjsonファイル（${fn}_(label).json）を指定して下さい`;\n            let needLoad = false;\n            ['moc', 'tex', 'mot'].map((type, i) => {\n                const rn = `l2d:${fn}_${type}`;\n                if (rn in this.ldr.resources)\n                    return;\n                if (rn in pixi_js_1.utils.TextureCache)\n                    pixi_js_1.utils.TextureCache[rn].destroy(true);\n                needLoad = true;\n                if (this.ldr.loading)\n                    this.ldr = new pixi_js_1.Loader();\n                switch (i) {\n                    case 0:\n                        this.ldr.add(rn, Cubism3Layer.plgArg.searchPath(fn, 'moc3_|moc3'), { xhrType: 'arraybuffer' });\n                        break;\n                    case 1:\n                        this.ldr.add(rn, Cubism3Layer.plgArg.searchPath(fn, 'png_|png|jpg_|jpg|jpeg_|jpeg'));\n                        break;\n                    case 2:\n                        this.ldr.add(rn, Cubism3Layer.plgArg.searchPath(fn + '_' + label, 'json_|json'), { xhrType: 'json' });\n                        break;\n                }\n            });\n            const fncLoaded = (res) => {\n                const moc = Live2DCubismCore.Moc.fromArrayBuffer(res['l2d:' + fn + '_moc'].data);\n                this.model = new LIVE2DCUBISMPIXI.ModelBuilder()\n                    .setMoc(moc)\n                    .setTimeScale(1)\n                    .addTexture(0, (res['l2d:' + fn + '_tex'] || pixi_js_1.utils.TextureCache['l2d:' + fn + '_tex']).texture)\n                    .addAnimatorLayer(id, LIVE2DCUBISMFRAMEWORK.BuiltinAnimationBlenders.OVERRIDE, 1)\n                    .build();\n                this.cnt.addChild(this.model);\n                const ani = LIVE2DCUBISMFRAMEWORK.Animation.fromMotion3Json(res['l2d:' + fn + '_mot'].data);\n                this.model.animator\n                    .getLayer(id)\n                    .play(ani);\n                const tick = () => {\n                    this.hdl_tick = requestAnimationFrame(tick);\n                    if (this.model)\n                        this.model.update(1);\n                };\n                this.hdl_tick = requestAnimationFrame(tick);\n                const a = Object.assign({}, hArg);\n                delete a.fn;\n                delete a.label;\n                this.state.fn = fn;\n                this.state.label = label;\n                this.lay(a, fncComp);\n                Cubism3Layer.plgArg.resume(fncComp);\n            };\n            if (needLoad)\n                this.ldr.load((_loader, res) => fncLoaded(res));\n            else\n                fncLoaded(this.ldr.resources);\n            return true;\n        }\n        if (!this.state.fn)\n            return false;\n        if ('label' in hArg) {\n            const label = hArg.label || '';\n            if (this.state.label != label) {\n                this.state.label = label;\n                const fn = this.state.fn;\n                const fn_mot = Cubism3Layer.plgArg.searchPath(fn + '_' + label, 'json_|json');\n                new pixi_js_1.Loader()\n                    .add('l2d:' + fn + '_mot', fn_mot, { xhrType: 1 })\n                    .load((_loader, res) => {\n                    const ani = LIVE2DCUBISMFRAMEWORK.Animation.fromMotion3Json(res['l2d:' + fn + '_mot'].data);\n                    this.model.animator\n                        .getLayer(id)\n                        .play(ani);\n                });\n            }\n        }\n        if ('scale' in hArg) {\n            this.state.scale = CmnLib.argChk_Num(hArg, 'scale', 1);\n            this.model.scale = new pixi_js_1.Point(this.state.scale, this.state.scale);\n            this.model.x = this.model.width / 2;\n            this.model.y = this.model.height / 2;\n        }\n        Layer.setXY(this.model, hArg, this.cnt, true);\n        return false;\n    }\n    clearLay(hArg) {\n        super.clearLay(hArg);\n        if (this.model) {\n            cancelAnimationFrame(this.hdl_tick);\n            this.cnt.removeChild(this.model);\n            this.model = null;\n        }\n        this.state = {\n            fn: '',\n            label: '',\n            scale: 1,\n        };\n    }\n    playback(hLay, fncComp = undefined) {\n        super.playback(hLay);\n        return this.lay(hLay, fncComp);\n    }\n    destroy() { this.clearLay({}); }\n}\nexports.Cubism3Layer = Cubism3Layer;\n//# sourceMappingURL=Cubism3Layer.js.map\n\n//# sourceURL=webpack:///./core/plugin/cubism3_layer/Cubism3Layer.js?")},"./core/plugin/cubism3_layer/index.js":
/*!********************************************!*\
  !*** ./core/plugin/cubism3_layer/index.js ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst Cubism3Layer_1 = __webpack_require__(/*! ./Cubism3Layer */ "./core/plugin/cubism3_layer/Cubism3Layer.js");\nexports.init = (plgArg) => {\n    Cubism3Layer_1.Cubism3Layer.plgArg = plgArg;\n    (async () => {\n        plgArg.addLayCls(\'cubism3\', () => { const l = new Cubism3Layer_1.Cubism3Layer; return l; });\n    })();\n};\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./core/plugin/cubism3_layer/index.js?')},"./core/plugin/emote_layer/EmoteLayer.js":
/*!***********************************************!*\
  !*** ./core/plugin/emote_layer/EmoteLayer.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Layer_1 = __webpack_require__(/*! skynovel/core/lib/sn/Layer */ \"./node_modules/skynovel/core/lib/sn/Layer.js\");\nconst Layer = Layer_1.Layer;\nconst CmnLib_1 = __webpack_require__(/*! skynovel/core/lib/sn/CmnLib */ \"./node_modules/skynovel/core/lib/sn/CmnLib.js\");\nconst CmnLib = CmnLib_1.CmnLib;\nconst pixi_js_1 = __webpack_require__(/*! pixi.js */ \"./node_modules/pixi.js/lib/pixi.es.js\");\nclass EmoteLayer extends Layer {\n    constructor() {\n        super();\n        this.sp = new pixi_js_1.Sprite;\n        this.record = () => Object.assign(super.record(), (this.inf)\n            ? {\n                fn: this.inf.fn,\n                label: this.inf.player.mainTimelineLabel,\n                scale: this.inf.player.scale,\n                grayscale: this.inf.player.grayscale,\n                windSpeed: this.inf.player.windSpeed,\n                windPowerMin: this.inf.player.windPowerMin,\n                windPowerMax: this.inf.player.windPowerMax,\n            }\n            : { fn: '' });\n        if (EmoteLayer.uniq_num++ % 2 == 1)\n            return;\n        if (EmoteLayer.uniq_num == 1) {\n            switch (String(EmoteLayer.plgArg.getVal('const.sn.platform.os.family'))) {\n                case 'Android':\n                case 'iOS':\n                    EmotePlayer.maskMode = EmotePlayer.MaskMode.STENCIL;\n                    break;\n            }\n            EmotePlayer.createRenderCanvas(CmnLib.stageW, CmnLib.stageH);\n        }\n        this.rt = pixi_js_1.RenderTexture.create({ width: CmnLib.stageW, height: CmnLib.stageH });\n        this.cnt.addChild(new pixi_js_1.Sprite(this.rt));\n        this.cvs = document.createElement('canvas');\n        this.cvs.id = `emote:${EmoteLayer.uniq_num}`;\n        this.cvs.width = CmnLib.stageW;\n        this.cvs.height = CmnLib.stageH;\n        this.cvs.hidden = true;\n        const cvsSN = document.getElementById('skynovel');\n        cvsSN.parentElement.appendChild(this.cvs);\n        this.sp.width = CmnLib.stageW;\n        this.sp.height = CmnLib.stageH;\n    }\n    lay(hArg, fncComp) {\n        if (!this.rt)\n            return false;\n        const layer = hArg.layer;\n        if (!layer) {\n            if (hArg['タグ名'] == 'add_lay')\n                return false;\n            throw `layerは必須です`;\n        }\n        super.lay(hArg);\n        if (hArg.fn) {\n            const fn = hArg.fn;\n            const player = new EmotePlayer(this.cvs);\n            this.inf = {\n                fn: fn,\n                player: player,\n            };\n            const a = Object.assign({}, hArg);\n            delete a.fn;\n            a['タグ名'] = 'lay';\n            player.onUpdate = () => {\n                if (!player)\n                    return;\n                this.sp.texture.destroy();\n                this.sp.texture = new pixi_js_1.Texture(new pixi_js_1.BaseTexture(this.cvs));\n                EmoteLayer.plgArg.render(this.sp, this.rt, true);\n            };\n            player.promiseLoadDataFromURL(EmoteLayer.plgArg.searchPath(fn, 'emtbytes_|emtbytes'))\n                .then(() => {\n                this.lay(a, fncComp);\n                EmoteLayer.plgArg.resume(fncComp);\n            });\n            return true;\n        }\n        else if (hArg['タグ名'] == 'add_lay')\n            return false;\n        if (!this.inf)\n            return false;\n        Layer.setXY(this.sp, hArg, this.cnt, true);\n        const player = this.inf.player;\n        if (hArg.label) {\n            const a = player.mainTimelineLabels;\n            if (!a.includes(hArg.label)) {\n                console.info(`エラーが発生しました。参考までに ${this.inf.fn}.emtbytes 内に存在するアニメ名を列挙します`);\n                a.map(v => console.info(`  label=${v}`));\n                throw `${this.inf.fn}.emtbytes 内に存在しないアニメ（label=${hArg.label}）です`;\n            }\n            player.mainTimelineLabel = hArg.label;\n        }\n        if ('scale' in hArg)\n            player.scale = CmnLib.argChk_Num(hArg, 'scale', 1);\n        if ('grayscale' in hArg)\n            player.grayscale = CmnLib.argChk_Num(hArg, 'grayscale', 1);\n        if ('windSpeed' in hArg)\n            player.windSpeed = CmnLib.argChk_Num(hArg, 'windSpeed', 0);\n        if ('windPowerMin' in hArg)\n            player.windPowerMin = CmnLib.argChk_Num(hArg, 'windPowerMin', 0);\n        if ('windPowerMax' in hArg)\n            player.windPowerMax = CmnLib.argChk_Num(hArg, 'windPowerMax', 0);\n        return false;\n    }\n    clearLay(hArg) {\n        if (!this.rt)\n            return;\n        super.clearLay(hArg);\n        if (!this.inf)\n            return;\n        this.inf.player.onUpdate = () => { };\n        this.inf.player.unloadData();\n        this.inf = null;\n        this.sp.visible = false;\n        EmoteLayer.plgArg.render(this.sp, this.rt, true);\n        this.sp.visible = true;\n    }\n    playback(hLay, fncComp = undefined) {\n        super.playback(hLay);\n        if (hLay.fn)\n            return this.lay(hLay, fncComp);\n        this.clearLay(hLay);\n        return false;\n    }\n    dump() {\n        if (!this.rt)\n            return `\"is\":\"nothing\"`;\n        return super.dump() + ((this.inf)\n            ? `, \"mdl\":{\"fn\":\"${this.inf.fn}\",\"label\":\"${this.inf.player.mainTimelineLabel}\",\"scale\":\"${this.inf.player.scale}\"}`\n            : `, \"mdl\":{\"fn\":\"\"}`);\n    }\n    ;\n    destroy() {\n        if (!this.rt)\n            return;\n        this.clearLay({});\n        this.cvs.parentElement.removeChild(this.cvs);\n        this.cnt.removeChildren().map((v) => v.destroy());\n    }\n}\nexports.EmoteLayer = EmoteLayer;\nEmoteLayer.uniq_num = 0;\n//# sourceMappingURL=EmoteLayer.js.map\n\n//# sourceURL=webpack:///./core/plugin/emote_layer/EmoteLayer.js?")},"./core/plugin/emote_layer/index.js":
/*!******************************************!*\
  !*** ./core/plugin/emote_layer/index.js ***!
  \******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst EmoteLayer_1 = __webpack_require__(/*! ./EmoteLayer */ "./core/plugin/emote_layer/EmoteLayer.js");\nexports.init = (plgArg) => {\n    EmoteLayer_1.EmoteLayer.plgArg = plgArg;\n    (async () => {\n        plgArg.addLayCls(\'emote\', () => { const l = new EmoteLayer_1.EmoteLayer; return l; });\n    })();\n};\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./core/plugin/emote_layer/index.js?')},"./core/web4webpack.js":
/*!*****************************!*\
  !*** ./core/web4webpack.js ***!
  \*****************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("//@ts-check\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst hPlg = {};\nconst h = __webpack_require__(/*! ./plugin.js */ \"./core/plugin.js\").default;\nfor (const nm in h) hPlg[nm] = __webpack_require__(\"./core/plugin sync recursive ^\\\\.\\\\/.*\\\\/index\\\\.js$\")(`./${nm}/index.js`);\n\nconst {SysWeb} = __webpack_require__(/*! skynovel/core/lib/sn/SysWeb */ \"./node_modules/skynovel/core/lib/sn/SysWeb.js\");\nconst dip = {'expanding': false};\nlet pcur = 'prj/';\nif (location.pathname.slice(-15) == '/index_app.html') {\n\tpcur = '';\n\tdip['oninit_run'] = false;\n}\n//@ts-ignore\nconst sys = new SysWeb(hPlg, {cur: pcur +'top/', dip: JSON.stringify(dip)});\nglobalThis.runSN = (cur = pcur +'top')=> sys.run(cur);\nglobalThis.stopSN = ()=> sys.stop();\n\n\n//# sourceURL=webpack:///./core/web4webpack.js?")}});