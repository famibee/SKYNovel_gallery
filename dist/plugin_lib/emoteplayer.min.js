class EmoteDevice{constructor(){this.initRenderCanvas()&&this.initWebGL()&&this.initGLEnv()&&this.initRenderTexture()&&this.initEmoteDevice()&&this.initMembers()?this.initialized=!0:this.initialized=!1}initRenderCanvas(){return this.renderCanvas=EmotePlayer.renderCanvas,null==this.renderCanvas?(alert("Unable to initialize Emote Device. Set render canvas first."),!1):(this.width=this.renderCanvas.width,this.height=this.renderCanvas.height,!0)}initWebGL(){this.gl=null;try{GL.init();const contextAttributes={antialias:!0,alpha:!0,depth:!1,stencil:!0};this.hgl=GL.createContext(this.renderCanvas,contextAttributes),GL.makeContextCurrent(this.hgl),this.gl=GL.contexts[this.hgl].GLctx}catch(e){}return!!this.gl||(alert("Unable to initialize WebGL. Your browser may not support it."),!1)}createMat4(){const out=new Float32Array(16);return out[0]=1,out[1]=0,out[2]=0,out[3]=0,out[4]=0,out[5]=1,out[6]=0,out[7]=0,out[8]=0,out[9]=0,out[10]=1,out[11]=0,out[12]=0,out[13]=0,out[14]=0,out[15]=1,out}initGLEnv(){if(!this.gl)return!1;const vs_src="\n        precision mediump float;\n        attribute vec4 a_pos;\n        attribute vec2 a_texCoord;\n        uniform vec2 u_scrSize;\n        uniform vec2 u_texSize;\n        uniform mat4 u_mvpMat;\n        varying vec2 v_texCoord;\n\n        void main()\n        {\n\t        vec4 tmp;\n\t        tmp = u_mvpMat * a_pos;\n\t        gl_Position.x = (tmp.x *  2.0) / u_scrSize.x;\n\t        gl_Position.y = (tmp.y * -2.0) / u_scrSize.y;\n\t        gl_Position.z = a_pos.z;\n\t        gl_Position.w = a_pos.w;\n\t        v_texCoord.x = a_texCoord.x / u_texSize.x;\n\t        v_texCoord.y = a_texCoord.y / u_texSize.y;\n        }",fs_src="\n        precision mediump float;\n        varying vec2 v_texCoord;\n        uniform sampler2D u_texUnitId;\n        uniform vec4 u_texColor;\n        \n        void main()\n        {\n\t        vec4 tmp;\n\t        tmp = texture2D(u_texUnitId, v_texCoord);\n            tmp *= u_texColor;\n            tmp.rgb *= tmp.a;\n            if (tmp.a <= 0.003) {\n                discard;\n            }\n\t        gl_FragColor = tmp;\n        }",gl=this.gl;this.shader_program=gl.createProgram();const vs=gl.createShader(gl.VERTEX_SHADER),fs=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(vs,vs_src),gl.shaderSource(fs,fs_src),gl.compileShader(vs),gl.compileShader(fs),gl.attachShader(this.shader_program,vs),gl.attachShader(this.shader_program,fs),gl.linkProgram(this.shader_program),this.aLoc=[],this.uLoc=[],this.aLoc[0]=gl.getAttribLocation(this.shader_program,"a_pos"),this.aLoc[1]=gl.getAttribLocation(this.shader_program,"a_texCoord"),this.uLoc[0]=gl.getUniformLocation(this.shader_program,"u_scrSize"),this.uLoc[1]=gl.getUniformLocation(this.shader_program,"u_texSize"),this.uLoc[2]=gl.getUniformLocation(this.shader_program,"u_mvpMat"),this.uLoc[3]=gl.getUniformLocation(this.shader_program,"u_texUnitId"),this.uLoc[4]=gl.getUniformLocation(this.shader_program,"u_texColor"),gl.enableVertexAttribArray(this.aLoc[0]),gl.enableVertexAttribArray(this.aLoc[1]),this.pMatrix=this.createMat4(),this.vertexPositionBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexPositionBuffer);const data=[-this.width/2,-this.height/2,0,this.width/2,-this.height/2,0,this.width/2,this.height/2,0,-this.width/2,this.height/2,0];gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(data),gl.STATIC_DRAW),gl.vertexAttribPointer(this.aLoc[0],3,gl.FLOAT,!1,0,0),this.coordBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,this.coordBuffer);const textureCoords=[0,this.height,this.width,this.height,this.width,0,0,0];gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(textureCoords),gl.STATIC_DRAW),gl.vertexAttribPointer(this.aLoc[1],2,gl.FLOAT,!1,0,0),this.vertexIndexBuffer=gl.createBuffer(),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.vertexIndexBuffer);const indices=[0,1,2,0,2,3];return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(indices),gl.STATIC_DRAW),gl.disable(gl.DEPTH_TEST),!0}initRenderTexture(){const gl=this.gl;return this.renderTexture=EmoteDevice_CreateEmoteTexture2(this.width,this.height),!0}initEmoteDevice(){return this.device=EmoteDevice_Initialize(),EmoteDevice_ChangeFrameBufferSize(this.width,this.height),!0}initMembers(){return this.playerList=[],this.animating=!1,this.date=new Date,!0}invalidateAllPlayersPhysics(){for(let player of this.playerList)player.invalidatePhysics()}registerPlayer(player){this.playerList.push(player),this.invalidateAnimation()}unregisterPlayer(player){this.playerList.splice(this.playerList.indexOf(player),1),this.checkCanvasHide(player.canvas),this.invalidateAnimation()}invalidateAnimation(){for(let i=0;i<this.playerList.length;i++)this.playerList[i].index=i;this.playerList.sort((a,b)=>null==a.canvas.id&&null!=b.canvas.id?-1:null!=a.canvas.id&&null==b.canvas.id?1:a.canvas.id<b.canvas.id?-1:a.canvas.id>b.canvas.id?1:a.zIndex<b.zIndex?-1:a.zIndex>b.zIndex?1:a.index-b.index),this.kickAnimation()}checkAnimationRequired(){return this.playerList.length>0}checkCanvasHide(canvas){if(null!=canvas&&!this.playerList.some(player=>player.canvas==canvas)){const ctx=canvas.getContext("2d");ctx.clearRect(0,0,canvas.width,canvas.height)}}onStartAnimation(){"undefined"!=typeof EmoteModule&&void 0!==EmoteModule.onStartEmoteAnimation?EmoteModule.onStartEmoteAnimation(this):this.requestId=requestAnimationFrame(this.drawAnimation.bind(this))}onStopAnimation(){"undefined"!=typeof EmoteModule&&void 0!==EmoteModule.onStopEmoteAnimation?EmoteModule.onStopEmoteAnimation(this):cancelAnimationFrame(this.requestId)}onContinueAnimation(){"undefined"!=typeof EmoteModule&&void 0!==EmoteModule.onStartEmoteAnimation||(this.requestId=requestAnimationFrame(this.drawAnimation.bind(this)))}kickAnimation(){this.animating&&!this.checkAnimationRequired()?(this.animating=!1,onStopAnimation()):!this.animating&&this.checkAnimationRequired()&&(this.animating=!0,this.lastAnimationTime=null,this.onStartAnimation())}drawAnimation(timeStamp){null===this.lastAnimationTime&&(this.lastAnimationTime=timeStamp);const curAnimationTime=timeStamp,diffTime=Math.min(100,curAnimationTime-this.lastAnimationTime),frameCount=diffTime*EmotePlayer.MS2FRAME;this.lastAnimationTime=curAnimationTime;const gl=this.gl;let canvas=null;const beginScene=()=>{null!=canvas&&(gl.clearColor(0,0,0,0),gl.clear(gl.COLOR_BUFFER_BIT))},endScene=canvas=>{if(null==canvas)return;let ctx=canvas.getContext("2d");ctx.clearRect(0,0,canvas.width,canvas.height),ctx.drawImage(this.renderCanvas,(canvas.width-this.width)/2,(canvas.height-this.height)/2)};EmoteDevice_SetMaskMode(EmotePlayer.maskMode),EmoteDevice_SetProtectTranslucentTextureColor(EmotePlayer.protectTranslucentTextureColor),EmoteDevice_SetMaskRegionClipping(EmotePlayer.maskRegionClipping);for(let player of this.playerList){if(player.canvas!==canvas&&(endScene(canvas),canvas=player.canvas,beginScene(canvas)),player.onUpdate(),!player.stepUpdate&&player.convolveCanvasMovementToPhysics){const curCanvasPosition=player.canvasPosition,prevCanvasPosition=player.prevCanvasPosition,scale=player.getState("scale"),vec=[(curCanvasPosition.left-prevCanvasPosition.left)/scale*frameCount,(curCanvasPosition.top-prevCanvasPosition.top)/scale*frameCount];EmotePlayer_SetOuterForce(player.playerId,"bust",vec[0],vec[1],0,0),EmotePlayer_SetOuterForce(player.playerId,"parts",vec[0],vec[1],0,0),EmotePlayer_SetOuterForce(player.playerId,"hair",vec[0],vec[1],0,0)}var prevHide=player.prevPracticalHide,curHide=player.practicalHide;if(player.prevPracticalHide=curHide,EmotePlayer.suspendWhenHide&&curHide)prevHide||(console.log("skip"),player.skip());else if(player.prevCanvasPosition=player.canvasPosition,player.stepUpdate?player.modified&&(EmotePlayer_Step(player.playerId),EmotePlayer_Update(player.playerId,0)):EmotePlayer_Update(player.playerId,frameCount*player.speed),player.modified=!1,null!=player.canvas&&!player.practicalHide){EmotePlayer_DrawToTexture2(player.playerId,this.renderTexture),gl.useProgram(this.shader_program),gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexPositionBuffer),gl.vertexAttribPointer(this.aLoc[0],3,gl.FLOAT,!1,0,0),gl.bindBuffer(gl.ARRAY_BUFFER,this.coordBuffer),gl.vertexAttribPointer(this.aLoc[1],2,gl.FLOAT,!1,0,0),gl.uniform2f(this.uLoc[0],this.width,this.height),gl.uniform2f(this.uLoc[1],this.width,this.height),gl.uniformMatrix4fv(this.uLoc[2],!1,this.pMatrix),gl.uniform1i(this.uLoc[3],0),gl.uniform4f(this.uLoc[4],EmotePlayer_GetVariable(player.playerId,"_globalR")/255,EmotePlayer_GetVariable(player.playerId,"_globalG")/255,EmotePlayer_GetVariable(player.playerId,"_globalB")/255,EmotePlayer_GetVariable(player.playerId,"_globalA")/255),gl.activeTexture(gl.TEXTURE0);var tex=EmoteDevice_GetEmoteTexture2Tex(this.renderTexture);gl.bindTexture(gl.TEXTURE_2D,tex),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.vertexIndexBuffer),gl.blendEquation(gl.FUNC_ADD),gl.blendFunc(gl.ONE,gl.ONE_MINUS_SRC_ALPHA),gl.enable(gl.BLEND),gl.drawElements(gl.TRIANGLES,6,gl.UNSIGNED_SHORT,0)}}endScene(canvas),this.onContinueAnimation()}}class EmotePlayer{constructor(canvas=null){this._canvas=canvas,this.playerId=null,this.initialized=!1,this.initMembers(),EmotePlayer.requireDevice()}destroy(){unloadData(),EmotePlayer.releaseDevice()}initMembers(){this.initialized=!1,this.registered=!1,this.isCharaProfileAvailable=!1,this.prevPracticalHide=!0,this.charaHeight=0,this.charaProfile={},this.charaBounds={},this._meshDivisionRatio=1,this._transformOrderMask=513,this._hairScale=1,this._partsScale=1,this._bustScale=1,this._speed=1,this._windSpeed=0,this._windPowMin=0,this._windPowMax=2,this._coord=[0,0],this._scale=1,this._rot=0,this._vertexR=this._vertexG=this._vertexB=128,this._globalR=this._globalG=this._globalB=this._globalA=255,this._grayscale=0,this._zIndex=0,this._hide=!1,this._stepUpdate=!1,this.modified=!0,this._convolveCanvasMovementToPhysics=!1,this.prevCanvasPosition={left:0,top:0},this._variableList=[],this._variableListLoaded=!1,this._mainTimelineLabel="",this._mainTimelineLabels=[],this._mainTimelineLabelsLoaded=!1,this._diffTimelineSlot=["","","","","",""],this._diffTimelineFadeOutTime=300,this._diffTimelineLabels=[],this._diffTimelineLabelsLoaded=!1}get needsDrawing(){return this.initialized}invalidateDrawing(){const needs=this.needsDrawing;this.registered!=needs&&(needs?(EmotePlayer.device.registerPlayer(this),this.onRegister()):(this.onUnregsiter(),EmotePlayer.device.unregisterPlayer(this)),this.registered=needs)}get meshDivisionRatio(){return this._meshDivisionRatio}set meshDivisionRatio(val){this._meshDivisionRatio!=val&&(this._meshDivisionRatio=val)}get hairScale(){return this._hairScale}set hairScale(val){this._hairScale!=val&&(this._hairScale=val,this.invalidatePhysics())}get partsScale(){return this._partsScale}set partsScale(val){this._partsScale!=val&&(this._partsScale=val,this.invalidatePhysics())}get bustScale(){return this._bustScale}set bustScale(val){this._bustScale!=val&&(b,this._bustScale=val,this.invalidatePhysics())}invalidatePhysics(){this.initialized&&(EmotePlayer_SetHairScale(this.playerId,this.hairScale*EmotePlayer.globalHairScale),EmotePlayer_SetPartsScale(this.playerId,this.partsScale*EmotePlayer.globalPartsScale),EmotePlayer_SetBustScale(this.playerId,this.bustScale*EmotePlayer.globalBustScale))}get windSpeed(){return this._windSpeed}set windSpeed(val){this._windSpeed!=val&&(this._windSpeed=val,this.invalidateWind())}get windPowMin(){return this._windPowMin}set windPowMin(val){this._windPowMin!=val&&(this._windPowMin=val,this.invalidateWind())}get windPowMax(){return this._windPowMax}set windPowMax(val){this._windPowMax!=val&&(this._windPowMax=val,this.invalidateWind())}invalidateWind(){if(this.initialized)if(0==this._windSpeed)EmotePlayer_StopWind(this.playerId);else{const w=EmotePlayer.device.width/2;EmotePlayer_StartWind(this.playerId,-w,w,this._windSpeed,this._windPowMin,this._windPowMax)}}get zIndex(){return this._zIndex}set zIndex(val){this._zIndex=val,EmotePlayer.device.invalidateAnimation()}get practicalHide(){return this.initialized?this._hide||0==this._globalA&&0==EmotePlayer_GetVariable(this.playerId,"_globalA"):this._hide}get hide(){return this._hide}set hide(val){this._hide!=val&&(this._hide=val)}get canvas(){return this._canvas}set canvas(val){if(this._canvas===val)return;const prevCanvas=this._canvas;this._canvas=val,EmotePlayer.device.checkCanvasHide(prevCanvas),EmotePlayer.device.invalidateAnimation(),this.prevCanvasPosition=this.canvasPosition}colorStrToValue(str){return"#"==str.substr(0,1)&&(str=str.substr(1)),{r:parseInt(str.substr(0,2),16),g:parseInt(str.substr(2,2),16),b:parseInt(str.substr(4,2),16)}}colorValueToStr(r,g,b){const toHex=val=>("0"+val.toString(16).toUpperCase()).substr(-2);return"#"+toHex(r)+toHex(g)+toHex(b)}getBinaryAsync(url){return new Promise((resolve,reject)=>{const xhr=new XMLHttpRequest;xhr.open("GET",url,!0),xhr.responseType="arraybuffer",xhr.onload=()=>{200===xhr.status||0===xhr.status?resolve(new Uint8Array(xhr.response)):reject(new Error(xhr.statusText))},xhr.onerror=()=>reject(new Error(xhr.statusText)),xhr.send()})}promiseLoadDataFromURL(...urls){const tasks=(urls=Array.prototype.concat.apply([],urls)).map(url=>this.getBinaryAsync(url));return Promise.all(tasks).then(this.loadData.bind(this))}loadDataFromURL(...urls){this.promiseLoadDataFromURL(...urls).catch(error=>console.error(error))}unloadData(){this.initialized&&(EmotePlayer_Finish(this.playerId),this.playerId=null,this.initialized=!1,this.clearVariableList(),this.clearMainTimelineLabels(),this.clearDiffTimelineLabels(),this.clearCharaProfile(),this.invalidateDrawing())}loadData(...files){files=Array.prototype.concat.apply([],files),this.unloadData(),this.playerId=EmotePlayer_Initialize(files),this.initialized=!0,this.modified=!0,this.loadCharaProfile(),EmotePlayer_SetTransformOrderMask(this.playerId,this._transformOrderMask),EmotePlayer_SetMeshDivisionRatio(this.playerId,this.meshDivisionRatio*EmotePlayer.globalMeshDivisionRatio),EmotePlayer_SetCoord(this.playerId,this._coord[0],this._coord[1],0,0),EmotePlayer_SetScale(this.playerId,this._scale,0,0),EmotePlayer_SetRot(this.playerId,this._rot,0,0),EmotePlayer_AddUserDefinedVariable(this.playerId,"_globalR"),EmotePlayer_AddUserDefinedVariable(this.playerId,"_globalG"),EmotePlayer_AddUserDefinedVariable(this.playerId,"_globalB"),EmotePlayer_AddUserDefinedVariable(this.playerId,"_globalA"),EmotePlayer_SetVariable(this.playerId,"_globalR",this._globalR,0,0),EmotePlayer_SetVariable(this.playerId,"_globalG",this._globalG,0,0),EmotePlayer_SetVariable(this.playerId,"_globalB",this._globalB,0,0),EmotePlayer_SetVariable(this.playerId,"_globalA",this._globalA,0,0),EmotePlayer_SetGrayscale(this.playerId,this._grayscale,0,0),EmotePlayer_SetColor(this.playerId,this._vertexR/255,this._vertexG/255,this._vertexB/255,1,0,0),this.invalidateWind(),this.invalidatePhysics(),""!=this._mainTimelineLabel&&EmotePlayer_PlayTimeline(this.playerId,this._mainTimelineLabel,EmotePlayer.TimelinePlayFlags.PARALLEL);for(let val of this._diffTimelineSlot)""!=val&&EmotePlayer_PlayTimeline(this.playerId,val,EmotePlayer.TimelinePlayFlags.PARALLEL|EmotePlayer.TimelinePlayFlags.DIFFERENCE);this.prevCanvasPosition=this.canvasPosition,this.invalidateDrawing()}loadCharaProfile(){if(this.isCharaProfileAvailable=EmotePlayer_IsCharaProfileAvailable(this.playerId),this.isCharaProfileAvailable){this.charaHeight=EmotePlayer_GetCharaHeight(this.playerId),this.charaProfile={};const charaProflleCount=EmotePlayer_CountCharaProfiles(this.playerId);for(let i=0;i<charaProflleCount;i++){const s=EmotePlayer_GetCharaProfileLabelAt(this.playerId,i),value=EmotePlayer_GetCharaProfile(this.playerId,s);this.charaProfile[s]=value}this.charaBounds={left:this.charaProfile.boundsLeft,top:this.charaProfile.boundsTop,right:this.charaProfile.boundsRight,bottom:this.charaProfile.boundsBottom},delete this.charaProfile.boundsLeft,delete this.charaProfile.boundsTop,delete this.charaProfile.boundsRight,delete this.charaProfile.boundsBottom}}clearCharaProfile(){this.isCharaProfileAvailable=!1,this.charaHeight=0,this.charaProfile={},this.charaBounds={}}getState(label){return this.initialized?EmotePlayer_GetState(this.playerId,label):0}getMarkerPosition(marker){if(!this.initialized||null==this.canvas)return null;let markerCoord=[0,0];if(marker in this.charaProfile){const _x=this.getState("coordX"),_y=this.getState("coordY"),_scale=this.getState("scale"),_rot=this.getState("rot"),s=Math.sin(_rot),c=Math.cos(_rot),markerX=0,markerY=this.charaProfile[marker];markerCoord=[markerX*c*_scale+markerY*-s*_scale+_x,markerX*s*_scale+markerY*c*_scale+_y]}const w=this.canvas.width/2,h=this.canvas.height/2,rect=this.canvas.getBoundingClientRect();return{x:markerCoord[0],y:markerCoord[1],offsetX:markerCoord[0]+w,offsetY:markerCoord[1]+h,clientX:markerCoord[0]+w+rect.left,clientY:markerCoord[1]+h+rect.top}}get transformOrderMask(){return this._transformOrderMask}set transformOrderMask(val){this._transformOrderMask=val,this.initialized&&(this.modified=!0,EmotePlayer_SetTransformOrderMask(this.playerId,val))}get speed(){return this._speed}set speed(val){this._speed=val}get coord(){return[].concat(this._coord)}set coord(val){this.setCoord(val[0],val[1])}get scale(){return this._scale}set scale(val){this.setScale(val)}get rot(){return this._rot}set rot(val){this.setRot(val)}get vertexColor(){return this.colorValueToStr(this._vertexR,this._vertexG,this._vertexB)}set vertexColor(val){this.setVertexColor(val)}get globalColor(){return this.colorValueToStr(this._globalR,this._globalG,this._globalB)}set globalColor(val){this.setGlobalColor(val)}get globalAlpha(){return this._globalA/255}set globalAlpha(val){this.setGlobalAlpha(val)}get grayscale(){return this._grayscale}set grayscale(val){this.setGrayscale(val)}setCoord(x,y,ms=0,easing=0){this._coord[0]==x&&this._coord[1]==y||(this._coord[0]=x,this._coord[1]=y,this.initialized&&(this.modified=!0,EmotePlayer_SetCoord(this.playerId,x,y,ms*EmotePlayer.MS2FRAME,easing)))}setScale(scale,ms=0,easing=0){this._scale!=scale&&(this._scale=scale,this.initialized&&(this.modified=!0,EmotePlayer_SetScale(this.playerId,scale,ms*EmotePlayer.MS2FRAME,easing)))}setRot(rot,ms=0,easing=0){this._rot!=rot&&(this._rot=rot,this.initialized&&(this.modified=!0,EmotePlayer_SetRot(this.playerId,rot,ms*EmotePlayer.MS2FRAME,easing)))}setVertexColor(color,ms=0,easing=0){color=this.colorStrToValue(color),this._vertexR==color.r&&this._vertexG==color.g&&this._vertexB==color.b||(this._vertexR=color.r,this._vertexG=color.g,this._vertexB=color.b,this.initialized&&(this.modified=!0,EmotePlayer_SetColor(this.playerId,color.r/255,color.g/255,color.b/255,1,ms*EmotePlayer.MS2FRAME,easing)))}setGlobalColor(color,ms=0,easing=0){color=this.colorStrToValue(color),this._globalR==color.r&&this._globalG==color.g&&this._globalB==color.b||(this._globalR=color.r,this._globalG=color.g,this._globalB=color.b,this.initialized&&(this.modified=!0,EmotePlayer_SetVariable(this.playerId,"_globalR",color.r,ms*EmotePlayer.MS2FRAME,easing),EmotePlayer_SetVariable(this.playerId,"_globalG",color.g,ms*EmotePlayer.MS2FRAME,easing),EmotePlayer_SetVariable(this.playerId,"_globalB",color.b,ms*EmotePlayer.MS2FRAME,easing)))}setGlobalAlpha(alpha,ms=0,easing=0){alpha*=255,this._globalA!=alpha&&(this._globalA=alpha,this.initialized&&(this.modified=!0,EmotePlayer_SetVariable(this.playerId,"_globalA",alpha,ms*EmotePlayer.MS2FRAME,easing)))}setGrayscale(grayscale,ms=0,easing=0){this._grayscale!=grayscale&&(this._grayscale=grayscale,this.initialized&&(this.modified=!0,EmotePlayer_SetGrayscale(this.playerId,this._grayscale,ms*EmotePlayer.MS2FRAME,easing)))}get canvasPosition(){if(null==this.canvas)return this.prevCanvasPosition;{const rect=this.canvas.getBoundingClientRect();return{left:rect.left+window.scrollX,top:rect.top+window.scrollY}}}get convolveCanvasMovementToPhysics(){return this._convolveCanvasMovementToPhysics}set convolveCanvasMovementToPhysics(val){val!=this._convolveCanvasMovementToPhysics&&(this._convolveCanvasMovementToPhysics=val,this.initialized&&!val&&(EmotePlayer_SetOuterForce(this.playerId,"bust",0,0,0,0),EmotePlayer_SetOuterForce(this.playerId,"parts",0,0,0,0),EmotePlayer_SetOuterForce(this.playerId,"hair",0,0,0,0)))}isLoopTimeline(label){return!!this.initialized&&EmotePlayer_IsLoopTimeline(this.playerId,label)}getTimelineTotalMilliSeconds(label){return!!this.initialized&&EmotePlayer_GetTimelineTotalFrameCount(this.playerId,label)*EmotePlayer.FRAME2MS}playTimeline(label,flags=0){this.initialized&&(this.modified=!0,EmotePlayer_PlayTimeline(this.playerId,label,flags))}stopTimeline(label=""){this.initialized&&(this.modified=!0,EmotePlayer_StopTimeline(this.playerId,label))}isTimelinePlaying(label=""){return!!this.initialized&&EmotePlayer_IsTimelinePlaying(this.playerId,label)}setTimelineBlendRatio(label,value,ms=0,easing=0,stopWhenBlendDone=!1){this.initialized&&(this.modified=!0,EmotePlayer_SetTimelineBlendRatio(this.playerId,label,value,ms*EmotePlayer.MS2FRAME,easing,stopWhenBlendDone))}getTimelineBlendRatio(label){return this.initialized?EmotePlayer_GetTimelineTotalFrameCount(this.playerId,label):0}fadeInTimeline(label,ms,easing=0){this.initialized&&(this.modified=!0,EmotePlayer_FadeInTimeline(this.playerId,label,ms*EmotePlayer.MS2FRAME,easing))}fadeOutTimeline(label,ms,easing=0){this.initialized&&(this.modified=!0,EmotePlayer_FadeOutTimeline(this.playerId,label,ms*EmotePlayer.MS2FRAME,easing))}clearVariableList(){this._variableList=[],this._variableListLoaded=!1}touchVariableList(){if(this._variableListLoaded||!this.initialized)return;const variableCount=EmotePlayer_CountVariables(this.playerId);for(let i=0;i<variableCount;i++){const variable={label:"",frameList:[],minValue:Number.MAX_VALUE,maxValue:Number.MIN_VALUE};variable.label=EmotePlayer_GetVariableLabelAt(this.playerId,i);const frameCount=EmotePlayer_CountVariableFrameAt(this.playerId,i);if(0!=frameCount){for(let j=0;j<frameCount;j++){const frame={label:"",value:0};frame.label=EmotePlayer_GetVariableFrameLabelAt(this.playerId,i,j),frame.value=EmotePlayer_GetVariableFrameValueAt(this.playerId,i,j),variable.minValue=Math.min(variable.minValue,frame.value),variable.maxValue=Math.max(variable.maxValue,frame.value),variable.frameList.push(frame)}this._variableList.push(variable)}}this._variableListLoaded=!0}get variableList(){return this.touchVariableList(),this._variableList}clearMainTimelineLabels(){this._mainTimelineLabels=[],this._mainTimelineLabelsLoaded=!1}touchMainTimelineLabels(){if(this._mainTimelineLabelsLoaded||!this.initialized)return;const timelineCount=EmotePlayer_CountMainTimelines(this.playerId);if(timelineCount>0)for(let i=0;i<timelineCount;i++)this._mainTimelineLabels.push(EmotePlayer_GetMainTimelineLabelAt(this.playerId,i));this._mainTimelineLabelsLoaded=!0}get mainTimelineLabels(){return this.touchMainTimelineLabels(),this._mainTimelineLabels}set mainTimelineLabel(val){this._mainTimelineLabel!=val&&(this.initialized?(""!=this._mainTimelineLabel&&EmotePlayer_StopTimeline(this.playerId,this._mainTimelineLabel),this._mainTimelineLabel=val,""!=this._mainTimelineLabel&&EmotePlayer_PlayTimeline(this.playerId,this._mainTimelineLabel,EmotePlayer.TimelinePlayFlags.PARALLEL),this.modified=!0):this._mainTimelineLabel=val)}get mainTimelineLabel(){return this._mainTimelineLabel}clearDiffTimelineLabels(){this._diffTimelineLabels=[],this._diffTimelineLabelsLoaded=!1}touchDiffTimelineLabels(){if(this._diffTimelineLabelsLoaded||!this.initialized)return;const timelineCount=EmotePlayer_CountDiffTimelines(this.playerId);if(timelineCount>0)for(let i=0;i<timelineCount;i++)this._diffTimelineLabels.push(EmotePlayer_GetDiffTimelineLabelAt(this.playerId,i));this._diffTimelineLabelsLoaded=!0}get diffTimelineLabels(){return this.touchDiffTimelineLabels(),this._diffTimelineLabels}set diffTimelineFadeoutTime(val){this._diffTimelineFadeOutTime=val}get diffTimelineFadeoutTime(){return this._diffTimelineFadeOutTime}set diffTimelineSlot1(val){this.setDiffTimelineLabel(0,val,this._diffTimelineFadeOutTime)}get diffTimelineSlot1(){return this.getDiffTimelineLabel(0)}set diffTimelineSlot2(val){this.setDiffTimelineLabel(1,val,this._diffTimelineFadeOutTime)}get diffTimelineSlot2(){return this.getDiffTimelineLabel(1)}set diffTimelineSlot3(val){this.setDiffTimelineLabel(2,val,this._diffTimelineFadeOutTime)}get diffTimelineSlot3(){return this.getDiffTimelineLabel(2)}set diffTimelineSlot4(val){this.setDiffTimelineLabel(3,val,this._diffTimelineFadeOutTime)}get diffTimelineSlot4(){return this.getDiffTimelineLabel(3)}set diffTimelineSlot5(val){this.setDiffTimelineLabel(4,val,this._diffTimelineFadeOutTime)}get diffTimelineSlot5(){return this.getDiffTimelineLabel(4)}set diffTimelineSlot6(val){this.setDiffTimelineLabel(5,val,this._diffTimelineFadeOutTime)}get diffTimelineSlot6(){return this.getDiffTimelineLabel(5)}setDiffTimelineLabel(index,val,fadeoutMs){this._diffTimelineSlot[index]!=val&&(this.initialized?(""!=this._diffTimelineSlot[index]&&EmotePlayer_FadeOutTimeline(this.playerId,this._diffTimelineSlot[index],fadeoutMs*EmotePlayer.MS2FRAME,0),this._diffTimelineSlot[index]=val,""!=this._diffTimelineSlot[index]&&EmotePlayer_PlayTimeline(this.playerId,this._diffTimelineSlot[index],EmotePlayer.TimelinePlayFlags.PARALLEL|EmotePlayer.TimelinePlayFlags.DIFFERENCE),this.modified=!0):this._diffTimelineSlot[index]=val)}getDiffTimelineLabel(index){return this.touchDiffTimelineLabels(),this._diffTimelineSlot[index]}get playingTimelineInfoList(){const result=[];if(!this.initialized)return result;const count=EmotePlayer_CountPlayingTimelines(this.playerId);for(let i=0;i<count;i++){const info={label:EmotePlayer_GetPlayingTimelineLabelAt(this.playerId,i),flags:EmotePlayer_GetPlayingTimelineFlagsAt(this.playerId,i)};result.push(info)}return result}get animating(){return!!this.initialized&&EmotePlayer_IsAnimating(this.playerId)}skip(){this.initialized&&(EmotePlayer_Skip(this.playerId),this.prevCanvasPosition=this.canvasPosition)}pass(){this.initialized&&(EmotePlayer_Pass(this.playerId),this.prevCanvasPosition=this.canvasPosition)}get stepUpdate(){return this._stepUpdate}set stepUpdate(val){this._stepUpdate!=val&&(this._stepUpdate=val,this.modified=!0)}setVariable(label,value,ms=0,easing=0){this.initialized&&(this.modified=!0,EmotePlayer_SetVariable(this.playerId,label,value,ms*EmotePlayer.MS2FRAME,easing))}getVariable(label){return this.initialized?EmotePlayer_GetVariable(this.playerId,label):0}setVariableDiff(module,label,value,ms=0,easing=0){this.initialized&&(this.modified=!0,EmotePlayer_SetVariableDiff(this.playerId,module,label,value,ms*EmotePlayer.MS2FRAME,easing))}getVariableDiff(module,label){return this.initialized?EmotePlayer_GetVariableDiff(this.playerId,module,label):0}startRecordAPILog(){this.initialized&&EmotePlayer_StartRecordAPILog(this.playerId)}stopRecordAPILog(){this.initialized&&EmotePlayer_StopRecordAPILog(this.playerId)}get recordingAPILog(){return!!this.initialized&&EmotePlayer_IsRecordingAPILog(this.playerId)}startReplayAPILog(){this.initialized&&EmotePlayer_StartReplayAPILog(this.playerId)}stopReplayAPILog(){this.initialized&&EmotePlayer_StopReplayAPILog(this.playerId)}get replayingAPILog(){return!!this.initialized&&EmotePlayer_IsReplayingAPILog(this.playerId)}clearAPILog(){this.initialized&&EmotePlayer_ClearAPILog(this.playerId)}set apiLog(val){this.initialized&&EmotePlayer_SetAPILog(this.playerId,val)}get apiLog(){return this.initialized?EmotePlayer_GetAPILog(this.playerId):""}onRegister(){}onUnregsiter(){}onUpdate(){}}EmotePlayer.TimelinePlayFlags={PARALLEL:1,DIFFERENCE:2},EmotePlayer.MaskMode={STENCIL:0,ALPHA:1},EmotePlayer.MS2FRAME=.06,EmotePlayer.FRAME2MS=1e3/60,EmotePlayer.deviceRefCount=0,EmotePlayer.device=null,EmotePlayer.renderCanvas=null,EmotePlayer.maskMode=EmotePlayer.MaskMode.ALPHA,EmotePlayer.protectTranslucentTextureColor=!0,EmotePlayer.maskRegionClipping=!0,EmotePlayer.suspendWhenHide=!0,EmotePlayer.globalMeshDivisionRatio=1;for(let label of["hairScale","partsScale","bustScale"]){const propLabel="global"+label.charAt(0).toUpperCase()+label.slice(1),varLabel=`_${propLabel}`;EmotePlayer[varLabel]=1,EmotePlayer.__defineGetter__(propLabel,()=>EmotePlayer[varLabel]),EmotePlayer.__defineSetter__(propLabel,val=>{EmotePlayer[varLabel]!=val&&(EmotePlayer[varLabel]=val,EmotePlayer.device&&EmotePlayer.device.invalidateAllPlayersPhysics())})}EmotePlayer.setRenderCanvas=canvas=>{EmotePlayer.renderCanvas=canvas},EmotePlayer.createRenderCanvas=(width,height)=>{const body=document.getElementsByTagName("body")[0];null==body&&alert("can't state body element on DOM.");const canvas=document.createElement("canvas");canvas.width=width,canvas.height=height,canvas.style.display="none",canvas.style.backgroundColor="transparent",canvas.style.position="absolute",body.appendChild(canvas),EmotePlayer.renderCanvas=canvas},EmotePlayer.requireDevice=()=>{EmotePlayer.deviceRefCount++<=0&&(EmotePlayer.device=new EmoteDevice)},EmotePlayer.releaseDevice=()=>{--sEmotePlayer.deviceRefCount<=0&&(EmotePlayer.device.destroy(),EmotePlayer.device=null)};